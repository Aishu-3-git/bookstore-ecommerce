{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aishwarya MS\\\\OneDrive\\\\Desktop\\\\bookstore ecommerce app\\\\client\\\\src\\\\components\\\\BookList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BookCard from './BookCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true); // Track loading state\n  const [error, setError] = useState(null); // Track error state\n\n  useEffect(() => {\n    // Fetch books from the backend API\n    axios.get('http://localhost:3001/api/books') // Replace with your server's URL if different\n    .then(response => {\n      setBooks(response.data); // Set books to state\n      setLoading(false); // Set loading to false when data is fetched\n    }).catch(error => {\n      console.error(\"There was an error fetching the books:\", error);\n      setError('Failed to load books. Please try again later.'); // Set error message\n      setLoading(false); // Set loading to false if error occurs\n    });\n  }, []); // Empty array means this effect will run once when the component mounts\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading books...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this); // Show loading text or a spinner\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this); // Show error message if there was an issue\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-list\",\n    children: books.length > 0 ? books.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n      book: book\n    }, book._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No books available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) // Show a message if there are no books\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"EGY3pKkAurN47vKRxkkn2C8TkJw=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useEffect","useState","axios","BookCard","jsxDEV","_jsxDEV","BookList","_s","books","setBooks","loading","setLoading","error","setError","get","then","response","data","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","book","_id","_c","$RefreshReg$"],"sources":["C:/Users/Aishwarya MS/OneDrive/Desktop/bookstore ecommerce app/client/src/components/BookList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport BookCard from './BookCard';\r\n\r\nconst BookList = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(true);  // Track loading state\r\n  const [error, setError] = useState(null);  // Track error state\r\n\r\n  useEffect(() => {\r\n    // Fetch books from the backend API\r\n    axios.get('http://localhost:3001/api/books')  // Replace with your server's URL if different\r\n      .then(response => {\r\n        setBooks(response.data);  // Set books to state\r\n        setLoading(false);  // Set loading to false when data is fetched\r\n      })\r\n      .catch(error => {\r\n        console.error(\"There was an error fetching the books:\", error);\r\n        setError('Failed to load books. Please try again later.');  // Set error message\r\n        setLoading(false);  // Set loading to false if error occurs\r\n      });\r\n  }, []);  // Empty array means this effect will run once when the component mounts\r\n\r\n  if (loading) {\r\n    return <div>Loading books...</div>;  // Show loading text or a spinner\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;  // Show error message if there was an issue\r\n  }\r\n\r\n  return (\r\n    <div className=\"book-list\">\r\n      {books.length > 0 ? (\r\n        books.map(book => (\r\n          <BookCard key={book._id} book={book} />  \r\n        ))\r\n      ) : (\r\n        <div>No books available.</div>  // Show a message if there are no books\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE3CD,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACY,GAAG,CAAC,iCAAiC,CAAC,CAAE;IAAA,CAC3CC,IAAI,CAACC,QAAQ,IAAI;MAChBP,QAAQ,CAACO,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAE;MAC1BN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC,CACDO,KAAK,CAACN,KAAK,IAAI;MACdO,OAAO,CAACP,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9DC,QAAQ,CAAC,+CAA+C,CAAC,CAAC,CAAE;MAC5DF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAe,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAE;EACvC;EAEA,IAAIZ,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAe,QAAA,EAAMR;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC,CAAE;EAC9B;EAEA,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAL,QAAA,EACvBZ,KAAK,CAACkB,MAAM,GAAG,CAAC,GACflB,KAAK,CAACmB,GAAG,CAACC,IAAI,iBACZvB,OAAA,CAACF,QAAQ;MAAgByB,IAAI,EAAEA;IAAK,GAArBA,IAAI,CAACC,GAAG;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACvC,CAAC,gBAEFnB,OAAA;MAAAe,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAE;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtCID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}